version: '3.9'

services:
  web:
    build:
      context: ../../
      dockerfile: devops/docker/apps/Dockerfile
    command: sh -c "python manage.py migrate_schemas --shared && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../../:/code
    env_file:
      - ../env/.env.dev
    depends_on:
      - db
      - redis

  db:
    image: postgres:14
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./wal:/var/lib/postgresql/wal-archive
    environment:
      POSTGRES_DB: multitenant_saas
      POSTGRES_USER: saasadmin
      POSTGRES_PASSWORD: supersecret123
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ../../static:/code/static
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

volumes:
  pgdata:
  redisdata:
